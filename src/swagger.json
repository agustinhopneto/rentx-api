{
  "openapi": "3.0.0",
  "info":{
    "title": "RentalX Documentation",
    "description": "This is an api Rent",
    "version": "1.0.0",
    "contact": {
      "email": "agustinho.pneto@gmail.com"
    }
  },
  "paths":{
    "/categories":{
      "post":{
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema": {
                "type": "object",
                "properties":{
                  "name": {
                    "type": "string"
                  },
                  "description":{
                    "type": "string"
                  }
                },
                "example":{
                  "name": "Category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses":{
          "201": {
            "description": "Created"
          },
          "500":{
            "description": "Category Already Exists"
          }
        }
      },
      "get":{
        "tags":["Category"],
        "summary": "List categories",
        "description": "List all categories",
        "responses":{
          "200":{
            "description":"Categories"
          }
        }
      }
    },
    "/categories/import":{
      "post":{
        "tags":["Category"],
        "summary": "Import categories",
        "description":"Import categories from a csv archive",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody":{
          "content":{
            "multipart/form-data":{
              "schema":{
                "type":"object",
                "properties":{
                  "file":{
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses":{
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/specifications":{
      "post":{
        "tags": ["Specifications"],
        "summary": "Create specification",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses":{
          "201":{
            "description": "Created"
          },
          "500":{
            "description": "Specification Already Exists"
          }
        }
      },
      "get":{
        "tags":["Specifications"],
        "summary": "Show a specification",
        "responses":{
          "200":{
            "description":"List all specifications"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Authentication user",
        "description": "Authenticate user and create a token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Seccess"
          },
          "400": {
            "description": "Email or password incorrect!"
          }
        }
      }
    }
  },
  "definitions":{
    "Specification":{
      "type":"object",
      "properties":{
        "name":{
          "type":"string"
        },
        "description": {
          "type":"string"
        }
      },
      "example":{
        "name": "Specification name sample",
        "description": "Specification description sample"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
